### utility
[[plugins]]
repo = 'cohama/lexima.vim'
on_i = 1

[[plugins]]
repo = 'tpope/vim-commentary'
on_map = ['gc', 'gcc']

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
    let g:NERDTreeShowHidden = 1
'''
[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
depends = 'nerdtree'
on_cmd = ['NERDTreeTabs', 'NERDTreeTabsToggle', 'NERDTreeTabsFind']
hook_add = '''
    nnoremap <silent><C-n> :NERDTreeTabsToggle<CR>
'''
hook_post_source = '''
    map <leader>r :NERDTreeTabsFind<CR>
    autocmd BufEnter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
'''

[[plugins]]
repo = 'junegunn/fzf'
hook_post_update = './install --all'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
on_cmd = [
    'Rg',
    'Files',
    'History'
]
hook_add = '''
    command! -bang -nargs=* Rg
    \ call fzf#vim#grep(
    \ 'rg --column --line-number --hidden --ignore-case --no-heading --color=always '.shellescape(<q-args>), 1,
    \ <bang>0 ? fzf#vim#with_preview({'options': '--delimiter : --nth 4..'}, 'up:60%')
    \ : fzf#vim#with_preview({'options': '--delimiter : --nth 4..'}, 'right:50%:hidden', '?'),
    \ <bang>0)

    nnoremap <C-g> :Rg<Space>
    nnoremap <C-f> :Files<CR>
    nnoremap <C-p> :History<CR>
'''

### completion
[[plugins]]
repo = 'Shougo/ddc.vim'
on_event = 'InsertEnter'
depends = ['denops.vim']
hook_source = '''
    call ddc#custom#patch_global('ui', 'native')
    call ddc#custom#patch_global('sources', ['around'])
    call ddc#custom#patch_global('sourceOptions', {
          \ '_': {
          \   'matchers': ['matcher_head'],
          \   'sorters': ['sorter_rank']
          \ },
          \ 'around': {
          \   'mark': 'around'
          \ },
          \ })

    " <TAB>: completion.
    inoremap <silent><expr> <TAB>
     \ pumvisible() ? '<C-n>' :
     \ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
     \ '<TAB>' : ddc#map#manual_complete()

    " <S-TAB>: completion back.
    inoremap <expr><S-TAB>  pumvisible() ? '<C-p>' : '<C-h>'

    call ddc#enable()
'''

[[plugins]]
repo = 'Shougo/ddc-ui-native'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
on_source = 'ddc.vim'

### lsp
[[plugins]]
repo = 'neovim/nvim-lspconfig'
on_event = 'BufEnter'
hook_source = '''
lua << EOF
local lsp_installer = require("nvim-lsp-installer")
lsp_installer.on_server_ready(function(server)
  local opts = {}
  server:setup(opts)
end)
EOF
'''

[[plugins]]
repo = 'williamboman/nvim-lsp-installer'
on_source = 'nvim-lspconfig'
